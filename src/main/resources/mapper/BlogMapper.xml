<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.info_system.dao.BlogDao">

    <resultMap id="blogMap" type="com.info_system.entity.Blog">
        <id property="blogId" column="blog_id"/>
        <result property="blogTitle" column="blog_title"/>
        <result property="blogContent" column="blog_content"/>
        <result property="blogTime" column="blog_time"/>
        <result property="deleteFlag" column="delete_flag"/>
        <result property="beforeBlogPic" column="before_blog_pic"/>
        <result property="afterBlogPic" column="after_blog_pic"/>
        <result property="blogPreviewPic" column="blog_preview_pic"/>
        <association property="likeCount" column="blog_id" javaType="java.lang.Integer" select="com.info_system.dao.BlogDao.getLikeCountByBlogId"/>
        <association property="commentCount" column="blog_id" javaType="java.lang.Integer" select="com.info_system.dao.BlogDao.getCommentCountByBlogId"/>
        <association property="user" column="user_id" javaType="com.info_system.entity.User" select="com.info_system.dao.UserDao.getUserById"/>
        <collection property="informUser" column="blog_id" javaType="java.util.List" ofType="com.info_system.entity.User" select="com.info_system.dao.BlogDao.getInformUserByBlogId"/>
    </resultMap>

    <resultMap id="commentMap" type="com.info_system.entity.Comment">
        <id property="commentId" column="comment_id"/>
        <result property="commentContent" column="comment_content"/>
        <result property="commentTime" column="comment_time"/>
        <result property="deleteFlag" column="delete_flag"/>
        <association property="blog" column="blog_id" javaType="com.info_system.entity.Blog" select="com.info_system.dao.BlogDao.getBlogById"/>
        <association property="user" column="user_id" javaType="com.info_system.entity.User" select="com.info_system.dao.UserDao.getUserById"/>
        <association property="commentCount" column="comment_id" javaType="java.lang.Integer" select="com.info_system.dao.BlogDao.getCommentLikeCount"/>
    </resultMap>

    <resultMap id="userMap" type="com.info_system.entity.User">
        <id property="id" column="user_id"/>
        <result property="username" column="user_name"/>
        <result property="deleteFlag" column="delete_flag"/>
        <result property="userPic" column="user_pic"/>
        <association property="fansNum" column="user_id" javaType="java.lang.Integer" select="com.info_system.dao.BlogDao.getFansNumByUserId"/>
        <association property="blogNum" column="user_id" javaType="java.lang.Integer" select="com.info_system.dao.BlogDao.getBlogNumByUserId"/>
    </resultMap>

    <select id="getInformUserByBlogId" resultMap="userMap">
        select * from t_user where user_id in (
          select t_inform.user_id from t_inform where t_inform.blog_id=#{0}
        )
    </select>

    <select id="getFansNumByUserId" resultType="java.lang.Integer">
        select count(*) from t_follow where user_id=#{0}
    </select>

    <select id="getBlogNumByUserId" resultType="java.lang.Integer">
        select  count(*) from t_blog where user_id=#{0}
    </select>

    <select id="getDetailUserById" resultMap="userMap">
        select * from t_user where user_id=#{0}
    </select>
    <select id="getCommentLikeCount" resultType="java.lang.Integer">
        select count(*) from t_commentLike where comment_id=#{0}
    </select>
    <select id="getCommentCountByBlogId" resultType="java.lang.Integer">
        select count(*) from t_commentblog where blog_id=#{0}
    </select>

    <select id="getLikeCountByBlogId" resultType="java.lang.Integer">
        select count(*) from t_likeblog where blog_id=#{0}
    </select>

    <insert id="addBlog" parameterType="com.info_system.entity.Blog" useGeneratedKeys="true" keyProperty="blogId">
        insert into t_blog(blog_title,blog_content,user_id,blog_time,delete_flag,before_blog_pic,after_blog_pic,blog_preview_pic) values(#{blogTitle},#{blogContent},#{user.id},#{blogTime},1,#{beforeBlogPic},#{afterBlogPic},#{blogPreviewPic})
    </insert>

    <select id="getBlogById" parameterType="java.lang.Integer" resultMap="blogMap">
        select * from t_blog where blog_id=#{0};
    </select>


    <select id="updateByPrimaryKey" parameterType="com.info_system.entity.Blog">
        update t_blog set
        <if test="blogId>=0">
          blog_id=#{blogId}
        </if>
        <if test="blogTitle!=null">
            blog_title=#{blogTitle},
        </if>
        <if test="blogContent!=null">
            blog_content=#{blogContent}
        </if>
        <if test="user!=null">
            user_id=#{user.userId}
        </if>
        <if test="blogTime!=null">
          blog_time=#{blogTime}
        </if>

        <if test="beforeBlogPic!=null">
            before_blog_pic=#{beforeBlogPic}
        </if>

        <if test="deleteFlag!=null">
            delete_flag=#{deleteFlag}
        </if>
    </select>

    <select id="getAllBlogs" resultMap="blogMap">
        select * from t_blog a where a.delete_flag=1 and a.user_id in (
            select t_user.user_id from t_user where  t_user.delete_flag=1
        ) order by blog_time DESC
    </select>

    <select id="getLikeNumByUser" resultType="java.lang.Integer">
        select  count(*) from t_likeblog where  t_likeblog.blog_id=#{blogId} and t_likeblog.user_id=#{userId}
    </select>

    <select id="getCommentNumByUser" resultType="java.lang.Integer">
        select  count(*) from t_commentblog where  t_commentblog.blog_id=#{blogId} and t_commentblog.user_id=#{userId}
    </select>

    <select id="getCommentByBlogId" resultMap="commentMap">
        select * from t_commentblog where blog_id=#{0} order by comment_time desc
    </select>

    <select id="getCommentByCommentId" resultMap="commentMap">
        select * from t_commentblog where comment_id=#{0}
    </select>

    <select id="getMyComments" resultMap="commentMap">
        select * from t_commentblog where user_id=#{userId} order by comment_time desc
    </select>
    <!--插入一条评论返回这条评论的id-->
    <insert id="addMyComment" parameterType="com.info_system.entity.Comment" useGeneratedKeys="true" keyProperty="commentId">
        insert into t_commentblog (blog_id,user_id,comment_content,comment_time) values (#{blogId},#{userId},#{commentContent},#{commentTime})
        <!--<selectKey keyProperty="comment_id" resultType="java.lang.Integer">-->
            <!--select LAST_INSERT_ID() as commentId-->
        <!--</selectKey>-->
    </insert>


    <delete id="deleteCommentByCommentAndUser">
        delete from t_commentlike where comment_id=#{commentId} and user_id=#{userId}
    </delete>

    <insert id="insertCommentLikeByUserAndComment">
        insert into t_commentlike(comment_id,user_id) values(#{commentId},#{userId})
    </insert>

    <insert id="addBlogLike" parameterType="com.info_system.entity.LikeBlog">
        insert into t_likeblog (blog_id,user_id) values (#{blogId},#{userId})
    </insert>

    <delete id="deleteBlogLike">
        delete  from t_likeblog where blog_id=#{blogId} and user_id=#{userId}
  </delete>

    <select id="getMyAllBlogs" resultMap="blogMap">
        select  * from t_blog where user_id=#{0} and delete_flag!=2
    </select>

    <update id="updateDeleteFlag">
        update t_blog set delete_flag=#{deleteFlag} where blog_id=#{blogId}
    </update>

    <update id="updateCommentDeleteFlag">
        update t_commentblog set delete_flag=#{deleteFlag} where comment_id=#{commentId}
    </update>

    <select id="getAllUser" resultMap="userMap">
        select * from t_user
    </select>

    <insert id="addInform" parameterType="com.info_system.entity.Inform">
        insert into t_inform (blog_id,user_id) values (#{blogId},#{userId})
    </insert>

    <insert id="addMessage" parameterType="com.info_system.entity.Message">
        insert into t_message(message_type,user_id,blog_id,sender_id) values(#{messageType},#{userId},#{blogId},#{senderId})
    </insert>

    <select id="getFocusNum" resultType="java.lang.Integer">
        select count(*) from t_follow where user_id=#{mainId} and follower_id=#{followerId}
    </select>

    <insert id="addFocus">
        insert into t_follow (user_id,follower_id) VALUES (#{mainId},#{followerId})
    </insert>

    <update id="changeAvatar">
        update t_user set user_pic=#{userPic} where user_id=#{userId}
    </update>

</mapper>